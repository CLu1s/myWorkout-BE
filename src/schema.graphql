type Query {
  info: String!
  feed: [Link!]!
  link(id: ID!): Link
  excercises: [Excercise!]
  workouts: [Workout!]
  routines: [Routine!]
  athletes: [Athlete!]
}

type Mutation {
  post(url: String!, description: String!): Link!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  newExcercise(name: String!, bodyPart: String!): Excercise!
  newWorkout(excerciseID: ID!, weight: Int!, maxSerie: Int!, reps: Int!, tempo: String!, resTime: Int! routineID: ID!): Workout!
  newRoutine(name:String!, description: String!): Routine!
  newAthlete(name: String!): Athlete!
}

type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
}
type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
}

type Excercise {
  id: ID!
  name: String!
  bodyPart: String!
}

type Workout{
  id: ID!
  excercise: Excercise!
  weight: Int!
  serie: Int!
  maxSerie: Int!
  reps: Int!
  tempo: String
  resTime: Int!
  routine: Routine!
}

type Routine{
  id: ID!
  name: String!
  description: String!
  workouts: [Workout!]!
}
type Athlete{
  id: ID!
  name: String!
  routines: [Routine!]!
}